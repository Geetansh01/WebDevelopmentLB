/******************Week 1*************************/
    L18 : HTML Basics
          1)HTML, Tags, comments
          2)HTML Text Element
                1)Block Element
                2)Inline Element
          3)Heading Tag
          4)paragraph Tag
          5)DIV tag
          6)Empty tag/ Self closing tag (eg: <br/> tag)
          7)List in HTML
                1)Ordered List
                2)Unordered List
                3)Description List
          8)Attributes in html Tags
          9)meta tag

/**********************CWH Starts*****************************/
/********Tut 1**************/
      1)Basic OverView
      2)FontEnd
            -HTML
            -CSS
            -JavaScript
      3)FrontEnd FrameWorks to deploy JavaScript Quickly and Efficiently
            -React
            -NextJS
            -Angular
      3)BackEnd
            -django
            -flask
            -nodeJS
            -php
            -ruby on rails

/********Tut 3**************/
      How to view websites on your phone

/********Tut 5**************/
      1)Image Tag
            1)For the attribute of height & width, always set either 1 of them and the other will automatically adjust. 
            These will be later finetuned by css but setting 1 of them in html helps in reducing CLS (so better SEO).
            2)Values of width & height Attributes are in pixels 
      2)Table tag

/********Tut 6**************/
      1) 3 SEO Web Vitals
            -CLS (Cumulative layout Shift) 
            -LCD (Largest Contentful Paint) 
            -FID (First Input Delay)
            ref : https://web.dev/articles/vitals
            1)LightHouse Report

/********Tut 7**************/
      2)form tag

/********Tut 8**************/
      1)Inline and block Elements

/********Tut 9**************/
      1)Id & Class attributes 

/********Tut 10**************/
      2)audio, video, svg, iframe tags

/********Tut 11**************/
      Semantic tags

/********Tut 13**************/
      1)HTML Entities
            &nbsp;
            &copy; etc..
      2)pre tag
      3)code tag

/********Tut 14**************/
      CSS starts
      1)style tag
      2)selectors

/********Tut 15**************/
      3 ways to add css to your HTML :
      1)Inline CSS
            -using style attribute
      2)Internal
      3)External

/********Tut 17**************/
      Selectors in CSS:
      1)Element Selector
      2)Class selector
      3)ID selector
      4)Child Selector
      5)Descendant Selector
      6)Universal Selector
      7)Pseudo Selector (pseudo class in CSS)
      8)attribute selector (Srch online)

/********Tut 18**************/
      CSS Box Model:
      1)Element, Padding, border, margin
      Tip: Always set "box-sizing" to "border-box" to lay out elements. 
      This makes dealing with the sizes of elements much easier

/********Tut 19**************/
      1)Fonts in CSS
            1)font-family - fallback fonts {Recommended to include a generic Font Family like "Times New Roman" Family}
            2)font-style, font-weight, font-size etc...
      2)Different text properties :
            1)text-decoration, text-transform, text-decoration-color etc.
            2)overflow, text-overflow, word-break etc.
            3)text-align etc.
      3)Google Fonts (https://fonts.google.com/)
      4)Colors in CSS
            Ways to represent colors in css
                  -color keywords
                  -HEX color codes
                  -RGB 
                  -RGBA
                  -HSL

/********Tut 21**************/
      1)CSS Specificity and Cascade
            1)Cascade Algorithm : 
                  The cascade algorithm has 4 distinct stages : 
                  1)Position and order of appearance : for use when same types of selectors in conflict
                  2)Specificity: for use when different types of selectors in conflict
                        Order of specificity is:
                        Inline Style > ID Selector > Class or Attribute Selector > Element Selector > Universal Selector

                        Tip : 
                        1)Use the least specific selectors more often to style your HTML. That way you can easily override specific styles when needed with more specific selectors. 
                        2)As a consequence of Tip 1), you should use !important v.very sparingly in your code (as it would make debugging difficult)
                        3)To calculate specificity, assign a value to each part of the selector:

                              -Universal Selector: 0
                              -Element selectors and pseudo-elements: 1
                              -Class selectors, attribute selectors, and pseudo-classes: 10
                              -ID selectors: 100
                              -Inline styles: 1000
                              -!important : 10,000
                        Then, add up the values of all the parts in the selector.

                  3)Origin
                  4)Importance: some CSS rules are weighted more heavily than others, especially with the " !important " rule type

